{"version":3,"file":"static/js/236.3fbe522b.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { registerUser } from 'redux/auth/AuthOperations';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { object, string } from 'yup';\nimport { toast } from 'react-hot-toast';\nimport { Box, Button, InputAdornment, TextField } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { useState } from 'react';\n\nconst emailRegExp =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst passwordRegExp = /^(?=(?:.*[a-zA-Z]){4})(?=(?:.*\\d){4})[a-zA-Z\\d]+$/;\n\nconst validationSchema = object({\n  name: string()\n    .min(4, 'Name must be at least 4 symbols.')\n    .required('Name is required.'),\n  email: string()\n    .matches(emailRegExp, 'Email must be a valid email.')\n    .required('Email is required.'),\n  password: string()\n    .matches(\n      passwordRegExp,\n      'Password must be at least 8 characters long and including min 4 letters and min 4 numbers.'\n    )\n    .required('Password is required.'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isDirty, isValid },\n  } = useForm({\n    mode: 'onChange',\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = ({ name, email, password }) => {\n    dispatch(\n      registerUser({\n        name: name,\n        email: email,\n        password: password,\n      })\n    )\n      .unwrap()\n      .then(response => {\n        toast.success(`Registered successfuly, ${response.user.name}!`);\n        reset();\n      })\n      .catch(() => toast.error('Something went wrong...'));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 12,\n        ml: 'auto',\n        mr: 'auto',\n        border: 1,\n        borderRadius: 2,\n        p: 2,\n        maxWidth: 300,\n      }}\n    >\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 2,\n            width: 300,\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            label=\"Name\"\n            error={!isValid && Boolean(errors.name)}\n            helperText={!isValid && errors.name?.message}\n            focused\n            {...register('name')}\n          />\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            label=\"Email\"\n            error={!isValid && Boolean(errors.email)}\n            helperText={!isValid && errors.email?.message}\n            focused\n            {...register('email')}\n          />\n          <TextField\n            type={showPassword ? 'text' : 'password'}\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            label=\"Password\"\n            error={!isValid && Boolean(errors.password)}\n            helperText={!isValid && errors.password?.message}\n            focused\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            {...register('password')}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            sx={{\n              width: 250,\n            }}\n            disabled={!isDirty || !isValid}\n          >\n            Register\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["validationSchema","object","name","string","min","required","email","matches","password","RegisterForm","dispatch","useDispatch","useState","showPassword","setShowPassword","useForm","mode","resolver","yupResolver","register","handleSubmit","reset","formState","errors","isDirty","isValid","Box","sx","display","justifyContent","mt","ml","mr","border","borderRadius","p","maxWidth","onSubmit","registerUser","unwrap","then","response","toast","user","catch","autoComplete","flexDirection","alignItems","gap","width","TextField","variant","fullWidth","size","label","error","Boolean","helperText","message","focused","type","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","preventDefault","VisibilityOff","Visibility","Button","disabled","Register"],"sourceRoot":""}