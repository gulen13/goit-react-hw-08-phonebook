{"version":3,"file":"static/js/111.9bd572dc.chunk.js","mappings":"uRAMaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0CC,EAAAA,EAAAA,MAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAiBhC,OACE,SAACC,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,eAAgB,SAChBC,GAAI,GACJC,GAAI,OACJC,GAAI,OACJC,OAAQ,EACRC,aAAc,EACdC,EAAG,EACHC,SAAU,KAVd,UAaE,iBAAMC,SAAUb,GA7BH,SAAC,GAAyB,IAAvBc,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzBnB,GACEoB,EAAAA,EAAAA,IAAM,CACJF,MAAOA,EACPC,SAAUA,KAGXE,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,oBAA2BD,EAASE,KAAKC,KAAzC,MACArB,GACD,IACAsB,OAAM,kBAAMH,EAAAA,GAAAA,MAAY,gBAAlB,GACV,IAgB2CI,aAAa,MAArD,UACE,UAACtB,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTqB,cAAe,SACfC,WAAY,SACZC,IAAK,EACLC,MAAO,KANX,WASE,SAACC,EAAA,GAAD,QACEC,QAAQ,WACRC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,QACNC,SAAO,GACHpC,EAAS,YAEf,SAAC8B,EAAA,GAAD,QACEC,QAAQ,WACRC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,WACNC,SAAO,GACHpC,EAAS,eAEf,SAACqC,EAAA,EAAD,CACEN,QAAQ,YACRO,KAAK,SACLlC,GAAI,CACFyB,MAAO,KAJX,SAMC,iBAOV,EC/Ec,SAASU,IACtB,OACE,4BACE,2BAAO,WACP,SAAC3C,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { toast } from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/AuthOperations';\nimport { useForm } from 'react-hook-form';\nimport { Box, Button, TextField } from '@mui/material';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const { register, handleSubmit, reset } = useForm();\n\n  const onSubmit = ({ email, password }) => {\n    dispatch(\n      logIn({\n        email: email,\n        password: password,\n      })\n    )\n      .unwrap()\n      .then(response => {\n        toast.success(`Wellcome, ${response.user.name}!`);\n        reset();\n      })\n      .catch(() => toast.error('No such user!'));\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 12,\n        ml: 'auto',\n        mr: 'auto',\n        border: 1,\n        borderRadius: 2,\n        p: 2,\n        maxWidth: 300,\n      }}\n    >\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: 2,\n            width: 300,\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            label=\"Email\"\n            focused\n            {...register('email')}\n          />\n          <TextField\n            variant=\"outlined\"\n            required\n            fullWidth\n            size=\"small\"\n            label=\"Password\"\n            focused\n            {...register('password')}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            sx={{\n              width: 250,\n            }}\n          >\n            Log In\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["LoginForm","dispatch","useDispatch","useForm","register","handleSubmit","reset","Box","sx","display","justifyContent","mt","ml","mr","border","borderRadius","p","maxWidth","onSubmit","email","password","logIn","unwrap","then","response","toast","user","name","catch","autoComplete","flexDirection","alignItems","gap","width","TextField","variant","required","fullWidth","size","label","focused","Button","type","Login"],"sourceRoot":""}