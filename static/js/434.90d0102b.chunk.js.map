{"version":3,"file":"static/js/434.90d0102b.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/phonebook/selector.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  max-width: 500px;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  background-color: #7cadd2;\n  margin: auto;\n  margin-top: 100px;\n  border-radius: 20px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 15px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 10px;\n  width: 200px;\n`;\n\nexport const Input = styled.input`\n  height: 25px;\n  border: 1px solid #080903;\n  border-radius: 6px;\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  font-size: small;\n  padding: 5px 10px;\n  border-radius: 10px;\n  background-color: #48a567;\n  cursor: pointer;\n`;\n","export const selectPhones = state => state.phones.items;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const getIsLoading = state => state.phones.isLoading;\n\nexport const getError = state => state.phones.error;","import { useDispatch, useSelector } from 'react-redux';\nimport { Form, Label, Button, Input } from './ContactForm.styled';\nimport { selectPhones } from 'redux/phonebook/selector';\nimport { useState } from 'react';\nimport { addContact } from 'redux/phonebook/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const phones = useSelector(selectPhones);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const existingName = phones.some(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n    const existingNumber = phones.find(item => item.number === number);\n\n    if (existingName) {\n      return alert(`Contact \"${name}\" is already in contacts list`);\n    } else if (existingNumber) {\n      return alert(`Number \"${number}\" is already in contacts list`);\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter name\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter number\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\" disabled={!name || !number}>\n        Add Contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ContactItem = styled.ul`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 2px;\n  padding-left: 5px;\n  width: 450px;\n  justify-content: space-between;\n  background-color: beige;\n`;\n\nexport const BtnDel = styled.button`\n  width: 100px;\n  font-size: small;\n  padding: 5px 10px;\n  border-radius: 5px;\n  background-color: #e78972;\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { ContactItem, BtnDel } from './ContactListItem.styled';\n\nconst ContactListItem = ({ contactName, contactNumber, onClick }) => {\n  return (\n    <ContactItem>\n      {contactName}: {contactNumber}\n      <BtnDel type=\"button\" onClick={onClick}>\n        Delete\n      </BtnDel>\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const ContactListStyle = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n`;","import ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { ContactListStyle } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter, selectPhones } from 'redux/phonebook/selector';\nimport { deleteContact } from 'redux/phonebook/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const phones = useSelector(selectPhones);\n  const filter = useSelector(selectFilter);\n  const filteredPhones = phones.filter(phone =>\n    phone.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <ContactListStyle>\n      {filteredPhones.map(({ id, name, number }) => {\n        return (\n          <ContactListItem\n            key={id}\n            id={id}\n            contactName={name}\n            contactNumber={number}\n            onClick={() => dispatch(deleteContact(id))}\n          />\n        );\n      })}\n    </ContactListStyle>\n  );\n};\n\nexport default ContactList;\n","import { Label, Input } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFiler } from 'redux/phonebook/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Label>\n      <h3>Find contacts name</h3>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => dispatch(setFiler(e.target.value))}\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { Container } from 'pages/Contacts/Contacts.styled';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/phonebook/operations';\nimport { getError, getIsLoading, selectPhones } from 'redux/phonebook/selector';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const phones = useSelector(selectPhones);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && (\n        <>\n          <h1>Loading...</h1>\n        </>\n      )}\n      {error && <p>Sorry. {error}</p>}\n      {!isLoading && !error && phones.length < 1 && (\n        <p>Sorry, there is no contacts yet</p>\n      )}\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["Container","styled","Form","Label","Input","Button","selectPhones","state","phones","items","selectFilter","filter","value","getIsLoading","isLoading","getError","error","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","event","target","autoComplete","onSubmit","preventDefault","existingName","some","item","toLowerCase","existingNumber","find","alert","newContact","addContact","type","title","placeholder","required","onChange","disabled","ContactItem","BtnDel","contactName","contactNumber","onClick","ContactListStyle","filteredPhones","phone","includes","map","id","deleteContact","e","setFiler","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}